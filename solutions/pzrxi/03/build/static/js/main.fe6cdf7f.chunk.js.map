{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","componentDidMount","a","fetch","then","response","ok","json","e","Promise","reject","result","console","log","setState","totalPages","Math","ceil","Object","keys","length","state","perPage","totalData","currentPageData","slice","catch","err","currentPage","onChangePage","bind","onChangeSorting","page","this","endItem","startItem","event","con","target","value","tmp","sort","b","userId","Id","currList","map","d","className","src","userAvatar","alt","title","body","id","Fragment","showMax","size","prevNext","activeBgColor","activeBorderColor","onClick","onChange","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe6cdf7f.chunk.js","sourcesContent":["import React from 'react';\n// import Pagination from \"react-js-pagination\";\nimport Pagination from \"react-bootstrap-4-pagination\";\nimport './App.css';\n\n\n\nclass App extends React.Component{\n  constructor() {\n      super();\n      this.state = {\n          totalPages:1,\n          currentPage:1,\n          perPage:20,\n          totalData:[],\n          currentPageData:[]\n      };\n      this.onChangePage = this.onChangePage.bind(this);\n      this.onChangeSorting = this.onChangeSorting.bind(this);\n  }\n  onChangePage(page) {\n      // update state \n      this.setState({currentPage:page})\n      var endItem = (this.state.perPage * page)-1\n      var startItem = endItem-this.state.perPage\n      if (page === 1) {\n        startItem = 0\n      }\n      this.setState({\n        currentPageData:this.state.totalData.slice(startItem,endItem)\n      })     \n  }\n\n  onChangeSorting(event){\n    let con = event.target.value\n    let tmp = this.state.totalData\n\n    if (con ==='userId ascending') {\n      tmp.sort((a, b) => (a.userId < b.userId) ? 1 : -1)\n      tmp.sort((a, b) => (a.Id < b.Id) ? 1 : -1)\n    } else if (con ==='userId descending') {\n      tmp.sort((a, b) => (a.userId > b.userId) ? 1 : -1)\n      tmp.sort((a, b) => (a.Id < b.Id) ? 1 : -1)\n    } else if (con ==='Id ascending') {\n      tmp.sort((a, b) => (a.Id < b.Id) ? 1 : -1)\n      tmp.sort((a, b) => (a.userId < b.userId) ? 1 : -1)      \n    } else if (con ==='Id descending') {\n      tmp.sort((a, b) => (a.Id > b.Id) ? 1 : -1)\n      tmp.sort((a, b) => (a.userId < b.userId) ? 1 : -1)  \n    }\n    console.log(tmp)\n    this.setState({\n      totalData:tmp\n    })\n    this.setState({\n      currentPageData:this.state.totalData.slice(0,this.state.perPage-1)\n    })\n  }\n  componentDidMount = async () => {\n    await fetch('https://raw.githubusercontent.com/opendream/openteam/main/posts.json')\n    .then((response) => {\n      if(!response.ok) {\n        return response.json().then(e => {\n          return Promise.reject({                   \n            e\n          })\n        })\n      } else return response.json()              \n    })\n    .then(result => {\n      console.log(result)\n      this.setState({\n        totalPages:Math.ceil(Object.keys(result).length/this.state.perPage),\n        totalData:result        \n      })\n      this.setState({\n        currentPageData:this.state.totalData.slice(0,this.state.perPage-1)\n      })\n\n    })\n    .catch((err) => console.log(err))\n  }\n\n  render() {\n    const currList = this.state.currentPageData.map(d => (\n      <div className=\"row border mr-1 ml-1 mt-2 itemDisplay\">\n        <div className=\" col-md-4 col-lg-4 col-xl-4 align-self-center \">\n          <img src={d.userAvatar} alt=\"\" \n              className=\"imgCir mx-auto d-block\" ></img>\n        </div>\n        <div className=\"col-md-8 col-xl-8\">\n\n              <div className=\"row mt-3\">\n                <div className=\"col-sm-3 col-md-3 col-lg-2 col-xl-2 font-weight-bold\">Title : </div>\n                <div className=\"col-md-8 col-xl-8\">{d.title}</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-sm-3 col-md-3 col-lg-2 col-xl-2 font-weight-bold\">Body : </div>\n                <div className=\"col-md-8 col-xl-8\"> {d.body}</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-sm-3 col-md-3 col-lg-2 col-xl-2 font-weight-bold\">Id : </div>\n                <div className=\"col-md-8 col-xl-8\"> {d.id}</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-sm-3 col-md-3 col-lg-2 col-xl-2 font-weight-bold\">userId : </div>\n                <div className=\"col-md-8 col-xl-8\"> {d.userId}</div>\n              </div>\n        \n        </div>\n      </div>\n    ))\n    const sortOption = [\n      {value:'sort by'},\n      {value:\"userId ascending\"},\n      {value:\"userId descending\"}, \n      {value:\"Id ascending\"},\n      {value:\"Id descending\"}\n    ]\n    return (\n      <React.Fragment>\n          <div className=\"container mt-5\">\n            <div className=\"row \">\n                \n                <div className=\"col-xl-9 col-md-8 col-sm-12\">\n                <Pagination\n                  totalPages={this.state.totalPages}\n                  currentPage={this.state.currentPage}\n                  showMax={5}\n                  size=\"lg\"\n                  prevNext\n                  activeBgColor=\"#18eaca\"\n                  activeBorderColor=\"#7bc9c9\"\n                  onClick={(event) => this.onChangePage(event)}\n                />\n                </div>\n                <div className=\"col-md-4 col-xl-3 \">\n                    <select id=\"domain\" className=\"mt-2 mr-4 mb-3 float-right\" onChange={this.onChangeSorting}>\n                          {sortOption.map(d => (\n                              <option key={d.value} value={d.value}>{d.value}</option>\n                          ))}\n                    </select>\n                </div>\n            \n            </div>\n         \n\n            {currList}\n          </div>\n          \n      </React.Fragment>\n    );\n  }\n};\n\nexport default App;\n ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}